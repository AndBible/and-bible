apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

task npmUpgrade(type: Exec) {
    inputs.file "bibleview-js/package.json"
    outputs.file "bibleview-js/node_modules/.bin/npm"
    workingDir "bibleview-js"
    // Workaround for F-droid, which has buggy npm version 5.8, that always fails when installing packages.

    // install nodejs to ProgramFiles
    commandLine "npx.cmd", "npm@latest", "install", "--save-dev", "npm@latest"
}

task npmInstall(type: Exec, dependsOn: npmUpgrade) {
    inputs.file "bibleview-js/package.json"
    outputs.dir "bibleview-js/node_modules"

    workingDir "bibleview-js"
    commandLine "C:\\Program Files\\nodejs\\npm.cmd", "install"
}

task webpack(type: Exec, dependsOn: npmInstall) {
    inputs.file "bibleview-js/package.json"
    inputs.dir "bibleview-js/src"
    inputs.file "bibleview-js/webpack.config.js"
    outputs.file "bibleview-js/dist/loader.js"

    workingDir "bibleview-js"
    commandLine "C:\\Users\\Admin\\node_modules\\.bin\\webpack.cmd"
}

task buildLoaderJs(type: Copy, dependsOn: webpack) {
    from("bibleview-js/dist/loader.js")
    into("src/main/assets/web")
}

preBuild.dependsOn buildLoaderJs


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    dexOptions {
        javaMaxHeapSize "4g"
    }
   /* C:\Users\Admin\AppData\Roaming\npm\node_modules\webpack*/
    /** these config values override those in AndroidManifest.xml.  Can also set versionCode and versionName */
    defaultConfig {
        applicationId "net.bible.android.activity"
        minSdkVersion 19
        targetSdkVersion 29
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        buildConfigField "String", "GitHash", "\"${getGitHash()}\""
        buildConfigField "String", "BuildDate", "\"${new Date().format('dd/MM/YY HH:mm:ss')}\""
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
//		debug {
//			minifyEnabled true
//			useProguard true
//			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//			zipAlignEnabled true
//		}
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
        warning 'InvalidPackage' 
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions {
        // prevent logger errors
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
            all {
                testLogging {
                    events "passed", "skipped", "failed"
                    exceptionFormat "full"
                }
            }
        }

    }

    bundle {
        language {
            enableSplit = false
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    implementation project(':db')

    // Appcompat:
    // 1.1.0 crashes WebView on API 21..22. Waiting for 1.2.0 (alpha02 fixes)
    // https://issuetracker.google.com/issues/141132133
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.drawerlayout:drawerlayout:1.0.0'
    implementation 'androidx.media:media:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.preference:preference-ktx:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    //implementation 'androidx.recyclerview:recyclerview-selection:1.0.0'

    //implementation 'com.jaredrummler:colorpicker:1.1.0'
    implementation 'com.github.AndBible:ColorPicker:ab-fix-1'

    implementation 'com.google.android.material:material:1.1.0'
    implementation "org.jetbrains.anko:anko-commons:0.10.8"

    // To support Android 4.4
    implementation 'androidx.multidex:multidex:2.0.1'

    // allow annotations like UIThread, StringRes see: https://developer.android.com/reference/android/support/annotation/package-summary.html
    implementation 'androidx.annotation:annotation:1.1.0'

    implementation "androidx.room:room-runtime:$room_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0'

    implementation 'com.google.dagger:dagger:2.26'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.26'
    kapt 'com.google.dagger:dagger-compiler:2.26'

    implementation 'de.greenrobot:eventbus:2.4.1'

    // 3.9 contains java8 bytecode, thus staying in 3.8
    implementation 'org.apache.commons:commons-lang3:3.8.1'

    // We are using our custom-built jsword.jar (see https://github.com/AndBible/jsword-tweaks)
    implementation files('libs/jsword.jar')

    // JSword related
    implementation 'org.apache.httpcomponents:httpclient-android:4.3.5.1'
    implementation 'org.apache.commons:commons-compress:1.12' // Note: versions > 1.12 will fail with Android Nougat and older.
    implementation "com.chenlb.mmseg4j:mmseg4j-analysis:1.8.6"
    implementation "com.chenlb.mmseg4j:mmseg4j-dic:1.8.6"
    implementation 'org.jdom:jdom2:2.0.6'
    implementation 'org.apache.lucene:lucene-analyzers:3.6.2'
    implementation 'de.psdev.slf4j-android-logger:slf4j-android-logger:1.0.5'

    testImplementation project(':db')

    // TESTS
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation "org.robolectric:shadows-multidex:4.3.1"
    testImplementation 'org.apache.httpcomponents:httpclient:4.3.2'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation 'org.mockito:mockito-core:3.2.4'
    testImplementation 'junit:junit:4.12'
}

repositories {
	mavenCentral()
}
